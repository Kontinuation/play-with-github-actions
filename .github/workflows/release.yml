name: Release

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Release name'
        required: false
      overwrite:
        description: 'Overwrite existing release'
        type: boolean
        required: true
        default: false
      prerelease:
        description: 'Pre-release'
        required: true
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'zulu'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install python dependencies
        run: python3 -m pip install requests

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Resolve version number
        id: resolve-version
        run: |
          export VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Project version number: $VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Delete existing release if exists
        if: ${{ github.event.inputs.overwrite != 'false' }}
        env:
          VERSION: ${{ steps.resolve-version.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set +e

          echo "Deleting release $VERSION"
          python3 .github/workflows/scripts/delete_gh_release.py --tag $VERSION
          if [ $? -ne 0 ]; then
            exit 1
          fi

          echo "Deleting tag $VERSION"
          git tag -d $VERSION
          git push --delete origin $VERSION

      - name: Delete existing maven package
        if: ${{ github.event.inputs.overwrite != 'false' }}
        env:
          VERSION: ${{ steps.resolve-version.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export GROUP_ID=$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout)
          echo "Finding all artifact IDs"
          find . -name pom.xml -execdir sh -c 'echo "$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)"' \; > artifact-list.txt
          cat artifact-list.txt | sed "s/^/${GROUP_ID}./" > package-list.txt

          echo "Packages to be deleted:"
          cat package-list.txt

          echo "Deleting package version $VERSION"
          python3 .github/workflows/scripts/delete_gh_packages.py --package-type maven --package-list package-list.txt --version $VERSION --owner-type user

      - name: Build and publish jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn --batch-mode deploy -DskipTests

      - name: Create tag
        env:
          VERSION: ${{ steps.resolve-version.outputs.version }}
        run: |
          git tag $VERSION
          git push origin $VERSION

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.inputs.name != '' && github.event.inputs.name || steps.resolve-version.outputs.version }}
          tag_name: ${{ steps.resolve-version.outputs.version }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            target/*.jar
            LICENSE
